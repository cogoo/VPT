@mixin square($width, $ratio) {
	width: $width;
	height: $width * $ratio;
}

@mixin circle($width) {
	width: $width;
	height: $width;
	border-radius: 50%;
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin position($position: relative) {
	position: $position;
}

@mixin box-shadow($a, $b, $c, $d, $e) {
	-webkit-box-shadow:$a $b $c rgba($d, $e) ;
	-moz-box-shadow:$a $b $c rgba($d, $e) ;
	box-shadow: $a $b $c rgba($d, $e) ;
}

@mixin overlay($color,$opacity,$index){
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0 auto;
    background-color: rgba($color,$opacity);
    z-index: $index;
}

@mixin bg-gradient-t2b($start-colour, $end-colour) {
    /*background-color: $start-colour;*/
    background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(top, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(top, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(top, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(top, $start-colour, $end-colour);
    background-image:         linear-gradient(top, $start-colour, $end-colour);
    filter:            progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}');
}

@mixin margin ($margin) {
  min-height: 1px;
  display: block;
  margin-bottom: $margin - 1;
}